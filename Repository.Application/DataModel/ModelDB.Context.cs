//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Repository.Application.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBEntities : DbContext
    {
        public DBEntities()
            : base("name=DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetGroups> AspNetGroups { get; set; }
        public virtual DbSet<AspNetGroupUser> AspNetGroupUser { get; set; }
        public virtual DbSet<AspNetLog> AspNetLog { get; set; }
        public virtual DbSet<AspNetMenu> AspNetMenu { get; set; }
        public virtual DbSet<AspNetRoleGroup> AspNetRoleGroup { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetSequential> AspNetSequential { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<asset> asset { get; set; }
        public virtual DbSet<assethistory> assethistory { get; set; }
        public virtual DbSet<assetmovement> assetmovement { get; set; }
        public virtual DbSet<CommonListValue> CommonListValue { get; set; }
        public virtual DbSet<movementtype> movementtype { get; set; }
        public virtual DbSet<place> place { get; set; }
    
        public virtual ObjectResult<spEmployeeBirthdayList_Result> spEmployeeBirthdayList(Nullable<int> totalRecord)
        {
            var totalRecordParameter = totalRecord.HasValue ?
                new ObjectParameter("totalRecord", totalRecord) :
                new ObjectParameter("totalRecord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEmployeeBirthdayList_Result>("spEmployeeBirthdayList", totalRecordParameter);
        }
    
        public virtual ObjectResult<spEmployeeBirthdayListForCurrentMonth_Result> spEmployeeBirthdayListForCurrentMonth(Nullable<int> month)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEmployeeBirthdayListForCurrentMonth_Result>("spEmployeeBirthdayListForCurrentMonth", monthParameter);
        }
    
        public virtual ObjectResult<spEmployeeAbsence_Result> spEmployeeAbsence(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string employeeId)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("employeeId", employeeId) :
                new ObjectParameter("employeeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spEmployeeAbsence_Result>("spEmployeeAbsence", startDateParameter, endDateParameter, employeeIdParameter);
        }
    }
}
