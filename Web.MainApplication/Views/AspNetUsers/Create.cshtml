@model Repository.Application.DataModel.AspNetUsers
@{
    ViewBag.Title = "Create New User";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="card box-solid">
        <div class="card-header with-border">
            <b class="card-title">@ViewBag.Title</b>
        </div>

        <div class="card-body">
            <div class="row">
                @Html.Label("Username", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @Required = "required" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div><br />

            <div class="row">
                @Html.Label("Full Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @Required = "required" } })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                </div>
            </div><br />

            <div class="row">
                @Html.Label("Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @Required = "required" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div><br />

            <div class="row">
                @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @Required = "required" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div><br />

            @* <div class="row">
                    @Html.Label("Last Password Change", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.LastPasswordChange, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastPasswordChange, "", new { @class = "text-danger" })
                    </div>
                </div><br />

                <div class="row">
                    @Html.Label("Error Tried", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ErrorTried, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ErrorTried, "", new { @class = "text-danger" })
                    </div>
                </div><br />

                <div class="row">
                    @Html.Label("Is Locked", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.IsLocked, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IsLocked, "", new { @class = "text-danger" })
                    </div>
                </div><br />

                <div class="row">
                    @Html.Label("Remark", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                    </div>
                </div><br />

                <div class="row">
                    @Html.Label("Created By", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                    </div>
                </div><br />

                <div class="row">
                    @Html.Label("Updated By", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdatedBy, "", new { @class = "text-danger" })
                    </div>
                </div><br />

                <div class="row">
                    @Html.Label("Created Date", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                    </div>
                </div><br />

                <div class="row">
                    @Html.Label("Is Active", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div><br />*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    @Html.ActionLink("Back", "Index", null, new { @Class = "btn btn-default" })
                    <input type="submit" value="Create" class="btn btn-primary" style="background-color:#008CBA; color:white;" />
                </div>
            </div>

        </div>
    </div>

}
